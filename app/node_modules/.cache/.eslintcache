[{"C:\\Users\\ADMIN\\apl-app\\src\\index.js":"1","C:\\Users\\ADMIN\\apl-app\\src\\App.js":"2","C:\\Users\\ADMIN\\apl-app\\src\\Categories.js":"3","C:\\Users\\ADMIN\\apl-app\\src\\Menu.js":"4","C:\\Users\\ADMIN\\apl-app\\src\\data.js":"5","C:\\Users\\ADMIN\\apl-app\\src\\CartDialog.js":"6","C:\\Users\\ADMIN\\apl-app\\src\\CartTable.js":"7","C:\\Users\\ADMIN\\apl-app\\src\\CheckoutView.js":"8"},{"size":219,"mtime":1636836362000,"results":"9","hashOfConfig":"10"},{"size":3985,"mtime":1647888626722,"results":"11","hashOfConfig":"10"},{"size":394,"mtime":1644008263047,"results":"12","hashOfConfig":"10"},{"size":1231,"mtime":1645362261607,"results":"13","hashOfConfig":"10"},{"size":2770,"mtime":1646770296528,"results":"14","hashOfConfig":"10"},{"size":1820,"mtime":1647696709780,"results":"15","hashOfConfig":"10"},{"size":1181,"mtime":1644681615316,"results":"16","hashOfConfig":"10"},{"size":5924,"mtime":1649673780705,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"ud9l9e",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"21"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ADMIN\\apl-app\\src\\index.js",[],[],["47","48"],"C:\\Users\\ADMIN\\apl-app\\src\\App.js",["49","50"],[],"import React, {useState} from 'react';\nimport Menu from './Menu';\nimport Categories from './Categories';\nimport items from './data';\nimport logo from './logo.svg';\nimport Button from '@mui/material/Button';\nimport LocalMallIcon from '@mui/icons-material/LocalMall';\n\nimport CartDialog from './CartDialog';\nimport {Snackbar} from \"@mui/material\";\n\nconst allCategories = ['all', ...new Set(items.map((item) => item.category))];\n\nfunction App() {\n    const [menuItems, setMenuItems] = useState([]);\n    const [categories, setCategories] = useState(allCategories);\n    const [cart, addToCart] = useState([])\n    const [isDialogOpen, setIsDialogOpen] = useState(false)\n    const [snackbarMessage, setSnackbarMessage] = useState(\"\")\n    const url = 'http://localhost/dashboard-administrator/productsapi.php'\n    React.useEffect(() => {\n        fetch(url)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                   // setIsLoaded(true);\n                    console.log(\"the items\", result)\n                    const data = result.map(next=> ({...next, price: Number(next.price)}))\n                    setMenuItems(data);\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    /*setIsLoaded(true);\n                    setError(error);*/\n                    console.log(\"error => \", error)\n                }\n            )\n    }, [])\n    const filterItems = (category) => {\n        if (category === 'all') {\n            setMenuItems(items);\n            return;\n        }\n        const newItems = items.filter((item) => item.category === category);\n        setMenuItems(newItems);\n    };\n\n    const addItemToCart = (item, operation) => {\n        const found = cart.find(next => next.id === item.id)\n        if(operation === \"INCREASE\"){\n            const items = !!found ? cart.map((next) => next.id === found.id ? {...next, count: next.count + 1} : next)\n                : [...cart, {...item, count: 1}]\n            addToCart(items)\n        }\n        else {\n            if (found) {\n                const items = cart\n                    .map((next) =>  next.id === found.id && next.count > 0 ? {...next, count: next.count - 1} : next)\n                    .filter(next => next.count > 0)\n                addToCart(items)\n            }\n        }\n\n\n\n\n\n    }\n\n    const onOpenCart = () =>{\n        if(!cart.length){\n            setSnackbarMessage(\"Nuk mund te hyni ne shporte pa pasur artikuj!\");\n        }\n        else {\n            setIsDialogOpen(true);\n        }\n\n\n    }\n\n\n    return (\n        <main>\n            <section className=\"menu section\">\n                <div className=\"title\">\n                    <img src={logo}></img><h2>Menu</h2>\n                    <div className=\"underline\"></div>\n                </div>\n                <div className='market'>\n                    <Categories categories={categories} filterItems={filterItems}/>\n                    <Button  onClick={onOpenCart}><LocalMallIcon/><h3>{cart.reduce((acc, next) => acc + next.count, 0)}</h3></Button>\n                </div>\n                <Menu cart={cart} items={menuItems} addToCart={(item, operation) => addItemToCart(item, operation)}/>\n            </section>\n            <section>\n                {/*{JSON.stringify(cart)}*/}\n            </section>\n            <CartDialog open={isDialogOpen} onClose={() => setIsDialogOpen(false)} cart={cart} clearCart={() => addToCart([])} setSnackbarMessage={setSnackbarMessage}/>\n            <Snackbar\n                open={!!snackbarMessage}\n                autoHideDuration={3000}\n                onClose={() => setSnackbarMessage('')}\n                message={snackbarMessage}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n            />\n        </main>\n    );\n}\n\nexport default App;\n","C:\\Users\\ADMIN\\apl-app\\src\\Categories.js",[],[],"C:\\Users\\ADMIN\\apl-app\\src\\Menu.js",["51"],[],"import React from 'react';\nimport Button from '@mui/material/Button';\nimport LocalGroceryStoreIcon from '@mui/icons-material/LocalGroceryStore';\nimport {Tooltip} from \"@mui/material\";\n\n\nconst Menu = (props) => {\n  const {items, addToCart, cart} = props;\n  \n  return <div className=\"section-center\">\n    {items.map((menuItem) =>{\n      const {id, title, img,desc, price} = menuItem;\n      return (\n      \n      <article key={id} className='menu-item'>\n        <img src={img} alt={title} className='photo'/>\n        <div className='item-info'>\n          <header>\n            <h4>{title}</h4>\n            <h4 className='price'>{price.toFixed(2)} €</h4>\n          </header>\n          <p className='item-text'>{desc}</p>\n          <div className=\"buttoni\">\n            <Tooltip title=\"Shtoje në shportë\" placement=\"top\">\n              <Button   onClick={() => addToCart(menuItem, \"INCREASE\")}>+</Button>\n            </Tooltip>\n            <LocalGroceryStoreIcon/>\n            <Tooltip title=\"Shtoje në shportë\" placement=\"top\">\n              <Button   onClick={() => addToCart(menuItem, \"DECREASE\")}>-</Button>\n            </Tooltip>\n\n          </div>\n        </div>\n\n      </article>);\n    })}\n  </div>;\n};\n\nexport default Menu;\n","C:\\Users\\ADMIN\\apl-app\\src\\data.js",[],[],"C:\\Users\\ADMIN\\apl-app\\src\\CartDialog.js",["52"],[],"import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CartTable from './CartTable';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport CheckoutView from \"./CheckoutView\";\r\nimport './index.css';\r\n\r\nconst CartDialog = props => {\r\n    const {open, onClose, cart, clearCart, setSnackbarMessage} = props\r\n    const [tab, setTab] = useState('cartTable')\r\n\r\n\r\n    const goToCheckout = () => {\r\n        if(!cart.length && tab === 'cartTable') {\r\n            return\r\n        }\r\n        tab === 'cartTable' ? setTab('checkout') : setTab('cartTable')\r\n    }\r\n\r\n\r\n        const total = cart.map(next => next.price* next.count).reduce((current, next) => current + next, 0).toFixed(2)\r\n        return (\r\n\r\n                <Dialog open={open} onClose={() => onClose()} disableEnforceFocus>\r\n                    <DialogTitle><div className='market'><span>Shporta</span><Button onClick={() => onClose()}><ClearIcon/></Button></div></DialogTitle>\r\n                    <DialogContent>\r\n                        {tab === 'cartTable' ? <CartTable items={cart}/> : <CheckoutView items={cart} total={total} clearCart={clearCart} closeDialog={() => onClose()} setSnackbarMessage={setSnackbarMessage}/>}\r\n                    </DialogContent>\r\n                    <div className='cart-footer'>\r\n                        <h4>Total: {total}</h4>\r\n                        <Button onClick={() => goToCheckout()}>{tab === 'cartTable' ? 'Vazhdoni' : 'Kthehu mbrapa'}</Button>\r\n\r\n                    </div>\r\n\r\n\r\n                </Dialog>\r\n        \r\n        );\r\n    \r\n }\r\n export default CartDialog;\r\n\r\n","C:\\Users\\ADMIN\\apl-app\\src\\CartTable.js",["53"],[],"\r\nimport React from 'react'\r\n\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\n\r\n\r\nfunction CartTable(props) {\r\n  const {items} = props\r\n  \r\n  return (\r\n    <Table className={'cart-table'}>\r\n      <TableHead>\r\n        <TableRow>\r\n            <TableCell>Imazhi</TableCell>\r\n            <TableCell>Produkti</TableCell>\r\n            <TableCell>Sasia</TableCell>\r\n            <TableCell>Çmimi</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {items.filter((c, index, array) => array.indexOf(c) === index).map((item, i) => {\r\n          return (\r\n            <TableRow >\r\n              <TableCell><img src={item.img} width='100px' height='100px'/></TableCell>\r\n              <TableCell>{item.title}</TableCell>\r\n              <TableCell>{item.count}</TableCell>\r\n              <TableCell>{item.count * item.price}</TableCell>\r\n            </TableRow>\r\n          )\r\n        })}\r\n      </TableBody>\r\n    </Table>\r\n  )\r\n}\r\nexport default CartTable;\r\n","C:\\Users\\ADMIN\\apl-app\\src\\CheckoutView.js",["54","55","56","57","58","59","60"],[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":16,"column":24,"nodeType":"67","messageId":"68","endLine":16,"endColumn":37},{"ruleId":"69","severity":1,"message":"70","line":88,"column":21,"nodeType":"71","endLine":88,"endColumn":37},{"ruleId":"65","severity":1,"message":"72","line":8,"column":28,"nodeType":"67","messageId":"68","endLine":8,"endColumn":32},{"ruleId":"65","severity":1,"message":"73","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":16},{"ruleId":"69","severity":1,"message":"70","line":28,"column":26,"nodeType":"71","endLine":28,"endColumn":76},{"ruleId":"65","severity":1,"message":"74","line":4,"column":5,"nodeType":"67","messageId":"68","endLine":4,"endColumn":11},{"ruleId":"65","severity":1,"message":"75","line":4,"column":21,"nodeType":"67","messageId":"68","endLine":4,"endColumn":27},{"ruleId":"65","severity":1,"message":"76","line":4,"column":29,"nodeType":"67","messageId":"68","endLine":4,"endColumn":42},{"ruleId":"65","severity":1,"message":"77","line":4,"column":44,"nodeType":"67","messageId":"68","endLine":4,"endColumn":57},{"ruleId":"65","severity":1,"message":"78","line":5,"column":5,"nodeType":"67","messageId":"68","endLine":5,"endColumn":16},{"ruleId":"65","severity":1,"message":"79","line":5,"column":48,"nodeType":"67","messageId":"68","endLine":5,"endColumn":57},{"ruleId":"65","severity":1,"message":"80","line":7,"column":59,"nodeType":"67","messageId":"68","endLine":7,"endColumn":67},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'setCategories' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'cart' is assigned a value but never used.","'ReactDOM' is defined but never used.","'Avatar' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'TextField' is defined but never used.","'Snackbar' is defined but never used.","no-global-assign","no-unsafe-negation"]